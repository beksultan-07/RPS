{"version":3,"sources":["title/header.js","game/game.js","popup/popup.js","img/камень.png","img/бумага.png","img/ножницы.png","img/question.png","App.js","reportWebVitals.js","index.js"],"names":["Headers","props","className","win","lose","Game","color","gameState","onClick","UserRock","src","rock","alt","UserPaper","paper","UserScissors","scissors","style","comp","result","document","querySelector","display","Popup","congratulation","winner","parseInt","Result","background","_","App","state","choice","Comp","rand","max","min","Math","floor","random","clickToChoose","userChoice","randComp","getRand","compChoice","Rock","setState","Paper","Scissors","showPopup","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5fb44ec4.chunk.js","sourcesContent":["import './header.css'\r\n\r\nfunction Headers(props) {\r\n    return (\r\n        <header className='header'>\r\n            <div className='choice'>\r\n                <h2 className='dash'>Камень</h2>\r\n                <h2 className='dash'>Ножницы</h2>\r\n                <h2>Бумага</h2>\r\n            </div>\r\n\r\n            <div className=\"states\">\r\n                <h2 className=\"win\">Победы: <span>{props.win}</span></h2>\r\n                <h2 className=\"lose\">Поражений: <span>{props.lose}</span></h2>\r\n            </div>\r\n\r\n        </header>\r\n    )\r\n}\r\n//rfce\r\nexport default Headers\r\n","import './game.css'\r\n\r\n\r\n\r\nfunction Game(props) {\r\n    let color = 'red'\r\n    if (props.gameState === 'Победа'){\r\n        color = 'green'\r\n    }\r\n    return (\r\n        <main className='game'>\r\n            <div className=\"you\">\r\n                <h1>Вы</h1>\r\n                <img onClick={props.UserRock} className='userChoice' src={props.rock} alt=\"#\"/>\r\n                <img onClick={props.UserPaper} className='userChoice' src={props.paper} alt=\"#\"/>\r\n                <img onClick={props.UserScissors} className='userChoice' src={props.scissors} alt=\"#\"/>\r\n            </div>\r\n\r\n            <div className=\"vs\">\r\n                <h4 style={{color}}>{props.gameState}</h4>\r\n                <h1>VS</h1>\r\n            </div>\r\n\r\n            <div className=\"comp\">\r\n                <h1>Компьютер</h1>\r\n                <img src={props.comp} alt=\"\"/>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Game\r\n","import './popup.css'\r\n\r\nfunction result(){\r\n    let popup = document.querySelector('.popup_wrap')\r\n    popup.style.display = 'none'\r\n}\r\n\r\nfunction Popup(props) {\r\n    let color = 'red'\r\n    let congratulation = 'Вы проиграли'\r\n    let winner = ''\r\n    if (parseInt(props.win) > parseInt(props.lose)){\r\n        color = 'green'\r\n        congratulation = 'Поздравляем Вы победили'\r\n        winner = '>'\r\n    }else{\r\n        winner = '<'\r\n    }\r\n\r\n    return (\r\n        <div className='popup_wrap'>\r\n            <div className=\"popup\">\r\n                <h3 style={{color}}>{congratulation}</h3>\r\n                <h3>Со счетом <span>{props.win} {winner} {props.lose}</span></h3>\r\n                <button onClick={result} onClick={props.Result} className=\"btn\" style={{background: color}}>Ok</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Popup\r\n","export default __webpack_public_path__ + \"static/media/камень.7fa31119.png\";","export default __webpack_public_path__ + \"static/media/бумага.ab257a5d.png\";","export default __webpack_public_path__ + \"static/media/ножницы.50e5447d.png\";","export default __webpack_public_path__ + \"static/media/question.187185de.png\";","import './App.css';\nimport React, { Component } from 'react';\nimport Headers from './title/header'\nimport Game from './game/game';\nimport Popup from './popup/popup';\n\nimport Rock from './img/камень.png'\nimport Paper from './img/бумага.png'\nimport Scissors from './img/ножницы.png'\nimport Comp from './img/question.png'\n\nclass App extends Component{\n  state = {\n    choice: ['rock', 'paper', 'scissors'],\n    win: 0,\n    lose: 0,\n    comp: Comp,\n    gameState: ''\n  }\n\n  rand = (max, min) => {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  clickToChoose = (userChoice) => {\n    let randComp = this.rand(-1, 3)\n    let getRand = this.state.choice[randComp]\n    if (getRand === 'rock'){\n      let compChoice = this.state.comp\n      compChoice = Rock\n      this.setState({comp: compChoice})\n    }else if (getRand === 'paper'){\n      let compChoice = this.state.comp\n      compChoice = Paper\n      this.setState({comp: compChoice})\n    }else{\n      let compChoice = this.state.comp\n      compChoice = Scissors\n      this.setState({comp: compChoice})\n    }\n\n    if (userChoice === 'rock' && getRand === 'paper' ||\n        userChoice === 'paper' && getRand === 'scissors' || \n        userChoice === 'scissors' && getRand === 'rock'){\n      let lose = this.state.lose\n      lose++\n      this.setState({lose})\n      let gameState = this.state.gameState\n      gameState = 'Поражение'\n      this.setState({gameState})\n    }else if (userChoice === getRand){\n      let gameState = this.state.gameState\n      gameState = 'Ничья'\n      this.setState({gameState})\n    }else{\n      let win = this.state.win\n      win++\n      this.setState({win})\n      let gameState = this.state.gameState\n      gameState = 'Победа'\n      this.setState({gameState})\n    }\n  }\n  result = () => {\n    let win = this.state.win\n    let lose = this.state.lose\n    win = 0\n    lose = 0\n    this.setState({win, lose})\n  }\n\n  render(){\n    let showPopup = null\n    if (this.state.win === 5 || this.state.lose === 5){\n      showPopup = (\n        <Popup win={this.state.win} lose={this.state.lose} Result={this.result}/>\n      )\n    }\n    return (\n      <div className=\"App\">\n        <div className='wrapper'>\n            {showPopup}\n            <div className=\"container\">\n              <Headers win={this.state.win} lose={this.state.lose}/>\n              <Game \n                UserRock = {() => this.clickToChoose('rock')}\n                UserPaper = {() => this.clickToChoose('paper')}\n                UserScissors = {() => this.clickToChoose('scissors')}\n                rock = {Rock}\n                paper = {Paper}\n                scissors = {Scissors}\n                comp = {this.state.comp}\n                gameState = {this.state.gameState}\n              />\n            </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}